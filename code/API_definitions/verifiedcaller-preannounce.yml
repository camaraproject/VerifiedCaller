openapi: 3.0.3
info:
  title: Verified Caller Pre-announcement
  description: |
    This API provides the ability to ...

    # Introduction

    With this API, API consumers can ...

    Verified Caller Pre-announcement API could be useful in scenarios such as:

    - ...
    - ...
    - ...


    # Relevant terms and definitions

    * **device**: A device refers to any physical entity that can connect to a network and participate in network communication.

    # API Functionality

    The API exposes the following endpoints/operations:

    - `/pre-announce` :
      - **POST** operation creates a new pre-announcement for a call to be branded

    # Authorization and authentication

    The "Camara Security and Interoperability Profile" provides details of how an API consumer requests an access token. Please refer to Identity and Consent Management (https://github.com/camaraproject/IdentityAndConsentManagement/) for the released version of the profile.

    The specific authorization flows to be used will be agreed upon during the onboarding process, happening between the API consumer and the API provider, taking into account the declared purpose for accessing the API, whilst also being subject to the prevailing legal framework dictated by local legislation.

    In cases where personal data is processed by the API and users can exercise their rights through mechanisms such as opt-in and/or opt-out, the use of three-legged access tokens is mandatory. This ensures that the API remains in compliance with privacy regulations, upholding the principles of transparency and user-centric privacy-by-design.

    # Identifying the device from the access token

    This API requires the API consumer to identify a device as the subject of the API as follows:
    - When the API is invoked using a two-legged access token, the device will be identified from the optional `device` object, which therefore MUST be provided.
    - When a three-legged access token is used however, this optional identifier MUST NOT be provided, as the subject will be uniquely identified from the access token.

    This approach simplifies API usage for API consumers using a three-legged access token to invoke the API by relying on the information that is associated with the access token and was identified during the authentication process.

    ## Error handling:

    - If the subject cannot be identified from the access token and the optional `device` object is not included in the request, then the server will return an error with the `422 MISSING_IDENTIFIER` error code.

    - If the subject can be identified from the access token and the optional `device` object is also included in the request, then the server will return an error with the `422 UNNECESSARY_IDENTIFIER` error code. This will be the case even if the same device is identified by these two methods, as the server is unable to make this comparison.

    # Further info and support

    (FAQs will be added in a later version of the documentation)
  version: wip
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  x-camara-commonalities: 0.5
externalDocs:
  description: Project documentation at Camara
  url: https://github.com/camaraproject/VerifiedCaller
servers:
  - url: '{apiRoot}/verified-caller/wip'
    variables:
      apiRoot:
        default: http://localhost:9091
        description: API root
tags:
  - name: Create Pre-announcement
    description: Create a call pre-announcement for a Calling and Called Party
paths:
  /pre-announce:
    post:
      tags:
        - Create Pre-announcement
      summary: Create a call pre-announcement in the service platform
      description: Create a call pre-announcement for a Calling and Called Party that will remain valid for a specified duration.
      operationId: createPreAnnouncement
      parameters:
        - $ref: '#/components/parameters/x-correlator'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePreAnnouncementRequest'
            examples:
              MANDATORY_PARAMETERS_ONLY:
                summary: Call participants only
                description: Create a pre-announcement for a caling and called participant, let the service provider choose the time to live for the pre-announcement.
                value:
                  callingParticipant: "+123456789"
                  calledParticipant: "+123456790"
              ALL_PARAMETERS_PRESENT:
                summary: All parameters provided
                description: Create a pre-announcement for a caling and called participant, specify timeToLive, displayName and customerId
                value:
                  callingParticipant: "+123456791"
                  calledParticipant: "+123456792"
                  timeToLive: 45
                  customerId: "Customer1"
                  displayName: "Company X Re: Your Complaint"

      responses:
        '201':
          $ref: '#/components/responses/Create201'
        '204':
          $ref: '#/components/responses/Create204'
        '400':
          $ref: '#/components/responses/Generic400'
        '401':
          $ref: '#/components/responses/Generic401'
        '403':
          $ref: '#/components/responses/Generic403'
        '404':
          $ref: '#/components/responses/Create404'
        '409':
          $ref: '#/components/responses/Generic409'
        '422':
          $ref: '#/components/responses/Create422'
        '429':
          $ref: '#/components/responses/Generic429'
        '500':
          $ref: '#/components/responses/Generic500'
        '503':
          $ref: '#/components/responses/Generic503'

      security:
        - openId:
            - verified-caller:create

components:
  securitySchemes:
    openId:
      description: OpenID Connect authentication
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration
  parameters:
    x-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        type: string
        pattern: ^[a-zA-Z0-9-]{0,55}$
  headers:
    x-correlator:
      description: Correlation id for the different services
      schema:
        type: string
        pattern: ^[a-zA-Z0-9-]{0,55}$
  schemas:
    PhoneNumber:
      description: A public identifier addressing a telephone subscription. In mobile networks it corresponds to the MSISDN (Mobile Station International Subscriber Directory Number). In order to be globally unique it has to be formatted in international format, according to E.164 standard, prefixed with '+'.
      type: string
      pattern: '^\+[1-9][0-9]{4,14}$'
      example: "+123456789"

    AnnouncementId:
      type: string
      format: uuid
      description: Unique identifier of a pre-announcement created as a result of the POST operation. Reserved for future use.
      example: "9e765f76-8037-4e5f-ba5d-e0c87c09a320"

    TimeToLive:
      type: integer
      minimum: 1
      maximum: 86400
      description: This parameter specifies for how long the pre-announcement is valid, in units of seconds. Calls processed after the call pre-announcement expiry shall be treated as not announced. If not specified, the service provider applies a default value. The service provider may enforce an upper bound of their choosing while validating the request.
      example: 60

    CustomerId:
      type: string
      description: Unique customer identifier for a brand
      example: "Customer1"

    DisplayName:
      type: string
      maxLength: 32
      description: Information that will be displayed to the callee. This may be used to overwrite the registered brand information of the caller on a per-call basis, e.g. to highlight the purpose of a specific call.
      example: "Company X, Re: Your complaint"

    CreatePreAnnouncementRequest:
      type: object
      description: "Request object to create a call pre-announcement"
      required:
        - "callingParticipant"
        - "calledParticipant"
      properties:
        callingParticipant:
          $ref: '#/components/schemas/PhoneNumber'
        calledParticipant:
          $ref: '#/components/schemas/PhoneNumber'
        timeToLive:
          $ref: '#/components/schemas/TimeToLive'
        customerId:
          $ref: '#/components/schemas/CustomerId'
        displayName:
          $ref: '#/components/schemas/DisplayName'

    AnnouncementInfo:
      type: object
      description: "Object to represent the creation of a single pre-announcement in the service platform"
      properties:
        announcementId:
          $ref: '#/components/schemas/AnnouncementId'
        timeToLive:
          $ref: '#/components/schemas/TimeToLive'

    ErrorInfo:
      description: Common schema for errors
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP status code returned along with this error response
        code:
          type: string
          description: Code given to this error
        message:
          type: string
          description: Detailed error description

  responses:
    Create201:
      description: Successful creation of a pre-announcement
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnnouncementInfo'
          examples:
            SUCCESSFUL_CREATION:
              summary: Success response with optional parameters
              description: Successful pre-announcement of a call. The service platform includes optional parameter(s) to inform the client.
              value:
                announcementId: "be5105dc-9b0e-437b-a03e-6e6ffb5e50c0"
                timeToLive: 25

    Create204:
      description: Successful creation of a pre-announcement with no content
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"

    Generic400:
      description: Bad Request
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 400
                  code:
                    enum:
                      - INVALID_ARGUMENT
          examples:
            GENERIC_400_INVALID_ARGUMENT:
              summary: Invalid argument
              description: Invalid Argument. Generic Syntax Exception
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query param.
    Generic401:
      description: Unauthorized
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 401
                  code:
                    enum:
                      - UNAUTHENTICATED
          examples:
            GENERIC_401_UNAUTHENTICATED:
              summary: Unauthenticated
              description: Request cannot be authenticated
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or expired credentials.
    Generic403:
      description: Forbidden
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 403
                  code:
                    enum:
                      - PERMISSION_DENIED
          examples:
            GENERIC_403_PERMISSION_DENIED:
              summary: Permission denied
              description: Permission denied. OAuth2 token access does not have the required scope or when the user fails operational security
              value:
                status: 403
                code: PERMISSION_DENIED
                message: Client does not have sufficient permissions to perform this action.
    Create404:
      description: Not found
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 404
                  code:
                    enum:
                      - NOT_FOUND
                      - VERIFIED_CALLER.DEVICE_NOT_FOUND
          examples:
            GENERIC_404_NOT_FOUND:
              summary: Generic Not Found
              description: Resource is not found
              value:
                status: 404
                code: NOT_FOUND
                message: "{{resource}} is not found"
            BRAND_REGISTRATION_404_DEVICE_NOT_FOUND:
              summary: Device not found
              description: The device is not known to the service provider
              value:
                status: 404
                code: VERIFIED_CALLER.DEVICE_NOT_FOUND
                message: 'The device is not known to the service provider'
    Generic409:
      description: Conflict
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 409
                  code:
                    enum:
                      - CONFLICT
          examples:
            GENERIC_409_CONFLICT:
              summary: Conflict
              description: Requested operation conflicts with existing data in the service platform
              value:
                status: 409
                code: CONFLICT
                message: Requested operation conflicts with existing data in the service platform
    Create422:
      description: Unprocessable Content
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorInfo"
              - type: object
                properties:
                  status:
                    enum:
                      - 422
                  code:
                    enum:
                      - IDENTIFIER_MISMATCH
                      - SERVICE_NOT_APPLICABLE
                      - MISSING_IDENTIFIER
                      - UNSUPPORTED_IDENTIFIER
                      - UNNECESSARY_IDENTIFIER
          examples:
            GENERIC_422_IDENTIFIER_MISMATCH:
              summary: Identifier mismatch
              description: Inconsistency between identifiers not pointing to the same device
              value:
                status: 422
                code: IDENTIFIER_MISMATCH
                message: Provided identifiers are not consistent.
            GENERIC_422_SERVICE_NOT_APPLICABLE:
              summary: Service not applicable
              description: Service not applicable for the provided identifier
              value:
                status: 422
                code: SERVICE_NOT_APPLICABLE
                message: The service is not available for the provided identifier.
            GENERIC_422_MISSING_IDENTIFIER:
              summary: Missing identifier
              description: An identifier is not included in the request and the device identification cannot be derived from the 3-legged access token
              value:
                status: 422
                code: MISSING_IDENTIFIER
                message: The device cannot be identified.
            GENERIC_422_UNSUPPORTED_IDENTIFIER:
              summary: Unsupported identifier
              description: None of the provided identifiers is supported by the implementation
              value:
                status: 422
                code: UNSUPPORTED_IDENTIFIER
                message: The identifier provided is not supported.
            GENERIC_422_UNNECESSARY_IDENTIFIER:
              summary: Unnecessary identifier
              description: An explicit identifier is provided when a device or phone number has already been identified from the access token
              value:
                status: 422
                code: UNNECESSARY_IDENTIFIER
                message: The device is already identified by the access token.
    Generic429:
      description: Too Many Requests
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_429_QUOTA_EXCEEDED:
              description: Request is rejected due to exceeding a business quota limit
              value:
                status: 429
                code: QUOTA_EXCEEDED
                message: Either out of resource quota or reaching rate limiting.
            GENERIC_429_TOO_MANY_REQUESTS:
              description: API Server request limit is overpassed
              value:
                status: 429
                code: TOO_MANY_REQUESTS
                message: Either out of resource quota or reaching rate limiting.
    Generic500:
      description: Internal server error
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_500_INTERNAL:
              summary: Generic Internal
              description: Problem in Server side. Regular Server Exception
              value:
                status: 500
                code: INTERNAL
                message: "Internal server error"
    Generic503:
      description: Service unavailable
      headers:
        x-correlator:
          $ref: "#/components/headers/x-correlator"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInfo"
          examples:
            GENERIC_503_UNAVAILABLE:
              summary: Generic Unavailable
              description: Service is not available. Temporary situation usually related to maintenance process in the server side
              value:
                status: 503
                code: UNAVAILABLE
                message: "Service unavailable"
